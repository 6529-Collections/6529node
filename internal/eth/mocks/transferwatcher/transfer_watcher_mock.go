// Code generated by mockery v2.51.0. DO NOT EDIT.

package mocks

import (
	tokens "github.com/6529-Collections/6529node/pkg/tdh/models"
	mock "github.com/stretchr/testify/mock"
)

// TokensTransfersWatcher is an autogenerated mock type for the TokensTransfersWatcher type
type TokensTransfersWatcher struct {
	mock.Mock
}

// WatchTransfers provides a mock function with given fields: contracts, startBlock, transfersChan, tipReachedChan
func (_m *TokensTransfersWatcher) WatchTransfers(contracts []string, startBlock uint64, transfersChan chan<- tokens.TokenTransferBatch, tipReachedChan chan<- bool) error {
	ret := _m.Called(contracts, startBlock, transfersChan, tipReachedChan)

	if len(ret) == 0 {
		panic("no return value specified for WatchTransfers")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func([]string, uint64, chan<- tokens.TokenTransferBatch, chan<- bool) error); ok {
		r0 = rf(contracts, startBlock, transfersChan, tipReachedChan)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewTokensTransfersWatcher creates a new instance of TokensTransfersWatcher. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewTokensTransfersWatcher(t interface {
	mock.TestingT
	Cleanup(func())
}) *TokensTransfersWatcher {
	mock := &TokensTransfersWatcher{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
