version: "3"

tasks:
  install-dev-tools:
    desc: Install dev tools (golangci-lint, goimports, etc.) in case they are missing
    cmds:
      - go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
      - go install golang.org/x/tools/cmd/goimports@latest
      - go install github.com/vektra/mockery/v2@v2.51.0

  tidy: go mod tidy

  build:
    desc: Build the Go application
    cmds:
      - go build -o bin/6529node ./cmd/node

  run:
    desc: Run the Go application
    cmds:
      - go run ./cmd/node

  dump-db:
    desc: Dump the BadgerDB
    cmds:
      - go run ./scripts/dump/dump.go {{.CLI_ARGS | default ""}}

  db_local_compare:
    desc: Compare the BadgerDB with the local SQLite DB
    cmds:
      - go run ./scripts/db_local_compare/db_local_compare.go {{.CLI_ARGS | default ""}}

  tdh_calculation:
    desc: Run the TDH calculation
    cmds:
      - go run ./cmd/tdh_calculation

  test:
    desc: Run all tests
    cmds:
      - go test ./... -race

  format:
    desc: Format code and fix imports
    cmds:
      - goimports -w .

  lint:
    desc: Run golangci-lint
    cmds:
      - golangci-lint run

  clean:
    desc: Clean up build artifacts
    cmds:
      - rm -rf bin/

  coverage:
    desc: "Create a test coverage report"
    cmds:
      - go test ./... -coverprofile=coverage.out

  build-linux:
    desc: "Build for Linux (amd64)"
    cmds:
      - GOOS=linux GOARCH=amd64 go build -ldflags="-X main.Version=$(git describe --exact-match --tags)" -o bin/6529node-linux-amd64-$(git describe --exact-match --tags) ./cmd/node

  build-darwin:
    desc: "Build for macOS (amd64)"
    cmds:
      - GOOS=darwin GOARCH=amd64 go build -ldflags="-X main.Version=$(git describe --exact-match --tags)" -o bin/6529node-darwin-amd64-$(git describe --exact-match --tags) ./cmd/node

  build-darwin-arm:
    desc: "Build for macOS (arm64, Apple Silicon)"
    cmds:
      - GOOS=darwin GOARCH=arm64 go build -ldflags="-X main.Version=$(git describe --exact-match --tags)" -o bin/6529node-linux-arm64-$(git describe --exact-match --tags) ./cmd/node

  build-windows:
    desc: "Build for Windows (amd64)"
    cmds:
      - GOOS=windows GOARCH=amd64 go build -ldflags="-X main.Version=$(git describe --exact-match --tags)" -o "bin/6529node-win-$(git describe --exact-match --tags).exe" ./cmd/node

  build-all:
    desc: "Build for all platforms (Linux, macOS, Windows)"
    deps:
      - build-linux
      - build-darwin
      - build-darwin-arm
      - build-windows
